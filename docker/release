FROM docker.io/pytorch/pytorch:1.13.0-cuda11.6-cudnn8-runtime

EXPOSE 47334/tcp
EXPOSE 47335/tcp
EXPOSE 47336/tcp

ENV PYTHONUNBUFFERED=1

RUN apt update && apt install -y build-essential

# db2 requirement
RUN apt install -y libxml2 libmagic1 libkrb5-dev || true

RUN python -m pip install --prefer-binary --no-cache-dir --upgrade pip==23.1.2 && \
    pip install --prefer-binary --no-cache-dir wheel==0.37.1 && \
    pip install --prefer-binary --no-cache-dir \
        cassandra-driver \
        mysql-connector-python \
        pymssql>=2.1.4 \
        psycopg2-binary \
        psycopg[binary]>=1.15.3 \
        pymongo certifi \
        snowflake-connector-python>=2.7.6 \
        clickhouse-driver \
        scylla-driver && \
    pip install git+https://github.com/StpMax/clickhouse-sqlalchemy@5eadc4f && \
    pip install --prefer-binary --no-cache-dir \
        databricks-sql-connector sqlalchemy-databricks || true && \
    pip install git+https://github.com/ea-rus/snowflake-sqlalchemy && \
    pip install --prefer-binary --no-cache-dir \
        fdb pyodbc || true && \
    pip install --prefer-binary --no-cache-dir \
        sqlalchemy-access || true && \
    pip install --prefer-binary --no-cache-dir \
        ckanapi || true && \
    pip install --prefer-binary --no-cache-dir \
        couchbase || true && \
    pip install --prefer-binary --no-cache-dir \
        ibm-db-sa ibm-db || true && \
    pip install --prefer-binary --no-cache-dir \
        oracledb==1.0.2 || true && \
    pip install --prefer-binary --no-cache-dir \
        redshift_connector sqlalchemy-redshift || true && \
    pip install --prefer-binary --no-cache-dir \
        trino~=0.313.0 requests-kerberos==0.12.0 || true && \
    pip install --prefer-binary --no-cache-dir \
        google-cloud-bigquery db-dtypes sqlalchemy-bigquery || true && \
    pip install --prefer-binary --no-cache-dir \
        boto3 || true && \
    pip install --prefer-binary --no-cache-dir \
        vertica-python sqlalchemy-vertica-python || true && \
    pip install --prefer-binary --no-cache-dir \
        crate[sqlalchemy] || true && \
    pip install --prefer-binary --no-cache-dir \
        pinotdb || true && \
    pip install --prefer-binary --no-cache-dir \
        sqlalchemy-solr || true && \
    pip install --prefer-binary --no-cache-dir \
        taospy || true && \
    pip install --prefer-binary --no-cache-dir \
        impyla || true && \
    pip install --prefer-binary --no-cache-dir \
        pymonetdb sqlalchemy-monetdb || true && \
    pip install --prefer-binary --no-cache-dir \
        salesforce-merlion || true && \
    pip install --prefer-binary --no-cache-dir \
        pydruid || true && \
    pip install --prefer-binary --no-cache-dir \
        sqlalchemy-hana hdbcli || true && \
    pip install --prefer-binary --no-cache-dir \
        elasticsearch elasticsearch-dbapi || true && \
    pip install --prefer-binary --no-cache-dir \
        pymysql || true && \
    pip install --prefer-binary --no-cache-dir \
        teradatasql teradatasqlalchemy || true && \
    pip install --prefer-binary --no-cache-dir \
        sqlalchemy-sqlany sqlanydb || true && \
    pip install --prefer-binary --no-cache-dir openai==0.28.0 || true && \
    pip install --prefer-binary --no-cache-dir tiktoken==0.3.0 || true && \
    pip install --prefer-binary --no-cache-dir tweepy || true && \
    pip install --prefer-binary --no-cache-dir slack_sdk || true && \
    pip install --no-cache-dir 'neuralforecast>=1.4.0, <1.5.0' || true && \
    pip install --no-cache-dir 'hierarchicalforecast<1.0' 'hyperopt<1.0' || true && \
    pip install --prefer-binary --no-cache-dir 'statsforecast>=1.4.0, <2.0' || true && \
    pip install --no-cache-dir google-api-python-client google-auth-httplib2 google-auth-oauthlib || true && \
    pip install --no-cache-dir 'llama-index==0.8.57' || true && \
    pip install --no-cache-dir 'wikipedia==1.4.0' 'langchain==0.0.303' || true && \
    pip install --no-cache-dir 'pysurrealdb' 'websocket' || true && \
    pip install --no-cache-dir 'pygithub' || true && \
    pip install --prefer-binary --no-cache-dir hugging_py_face || true && \
    pip install --no-cache-dir pyignite || true && \
    pip install --no-cache-dir 'duckdb==0.6.1' || true && \
    pip install --prefer-binary --no-cache-dir ShopifyApi || true && \
    pip install --prefer-binary --no-cache-dir plaid-python || true && \
    pip install --prefer-binary --no-cache-dir atlassian-python-api || true && \
    pip install --no-cache-dir 'binance-connector==2.0.0' || true && \
    pip install --prefer-binary --no-cache-dir 'monkeylearn==3.6.0' || true && \
    pip install --prefer-binary --no-cache-dir 'nixtlats>=0.1.4' || true && \
    pip install --prefer-binary --no-cache-dir 'mediawikiapi' || true && \
    pip install --prefer-binary --no-cache-dir 'stripe' || true && \
    pip install --prefer-binary --no-cache-dir 'python-gitlab' || true && \
    pip install --prefer-binary --no-cache-dir 'pymsteams' || true && \
    pip install --prefer-binary --no-cache-dir bs4 pymupdf || true && \
    pip install --prefer-binary --no-cache-dir 'sib_api_v3_sdk' || true && \
    pip install --prefer-binary --no-cache-dir 'newsapi-python' || true && \
    pip install --prefer-binary --no-cache-dir 'databend-sqlalchemy' || true && \
    pip install --prefer-binary --no-cache-dir 'weaviate-client~=3.24.2' || true && \
    pip install --prefer-binary --no-cache-dir 'pgvector' || true && \
    pip install --prefer-binary --no-cache-dir 'anthropic==0.3.4' || true && \
    pip install --prefer-binary --no-cache-dir python-gitlab || true && \
    pip install --prefer-binary --no-cache-dir 'chromadb~=0.4.8' 'pysqlite3-binary' || true && \
    pip install --prefer-binary --no-cache-dir 'cohere==4.5.1' || true && \
    pip install --prefer-binary --no-cache-dir 'polars' || true

ARG VERSION=
RUN pip install --no-cache-dir mindsdb${VERSION:+"==$VERSION"}
RUN python3 -c 'import nltk; nltk.download("punkt"); nltk.download("stopwords");'

COPY mindsdb_config.release.json /root/mindsdb_config.json
COPY mindsdb_launcher.sh /root/

CMD bash /root/mindsdb_launcher.sh start
